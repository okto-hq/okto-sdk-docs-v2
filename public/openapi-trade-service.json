{
    "openapi": "3.1.0",
    "info": {
      "title": "Okto Trade Service",
      "description": "Okto Trade Service describes the APIs for the trade service.q",
      "version": "1.0.0",
      "contact": {
        "name": "Ovia Seshadri",
        "url": "https://okto.tech",
        "email": "devrel@coindcx.com"
      }
    },
    "servers": [
      {
        "url": "https://trade-service-api.okto.tech",
        "description": "Trade Service URL"
      }
    ],
    "tags": [
      {
        "name": "Usage",
        "description": "All the usage related APIs"
      }
    ],
    "paths": {
      "/api/trade-service/v1/endpoint1": {
        "get": {
          "tags": ["Usage"],
          "summary": "API Endpoint 1",
          "description": "Some description for endpoint 1",
          "operationId": "opid1",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetWalletsResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "/api/trade-service/v1/endpoint2": {
        "get": {
          "tags": ["Usage"],
          "summary": "API Endpoint 2",
          "description": "Some description for endpoint 2",
          "operationId": "opid2",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSupportedNetworksResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "/api/trade-service/v1/endpoint3": {
        "get": {
          "tags": ["Usage"],
          "summary": "API Endpoint 3",
          "description": "Some description for endpoint 3",
          "operationId": "opid3",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSupportedTokensResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "/api/trade-service/v1/endpoint4": {
        "get": {
          "tags": ["Usage"],
          "summary": "API Endpoint 4",
          "description": "Some description for endpoint 4",
          "operationId": "opid4",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetAggregatedPortfolioResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "/api/trade-service/v1/endpoint5": {
        "get": {
          "tags": ["Usage"],
          "summary": "API Endpoint 5",
          "description": "Some description for endpoint 5",
          "operationId": "opid5",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetPortfolioActivityResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/responses/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "name": "Authentication"
        },
        "basicAuth": {
          "type": "http",
          "scheme": "basic"
        },
        "apiKeyHeader": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key",
          "description": "Okto App Secret",
          "example": "OKTO_APP_SECRET"
        },
        "apiKeyQuery": {
          "type": "apiKey",
          "in": "query",
          "name": "api_key"
        },
        "apiKeyCookie": {
          "type": "apiKey",
          "in": "cookie",
          "name": "api_key"
        },
        "v1auth": {
          "type": "apiKey",
          "name": "X-Api-Key",
          "in": "header",
          "description": "Okto App Secret",
          "example": "YOUR_OKTO_APP_SECRET"
        },
        "oktoAppSecretAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "Okto App Secret",
          "description": "Okto App Secret",
          "example": "YOUR_OKTO_APP_SECRET"
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "implicit": {
              "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
              "scopes": {
                "write:planets": "modify planets in your account",
                "read:planets": "read your planets"
              }
            }
          }
        }
      },
      "parameters": {
        "intent_id": {
          "name": "intent_id",
          "in": "query",
          "description": "Intent id of the order.",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "intent_type": {
          "name": "intent_type",
          "in": "query",
          "description": "Intent type of the order.",
          "required": false,
          "schema": {
            "type": "string",
            "example": "TOKEN_TRANSFER"
          }
        },
        "status": {
          "name": "status",
          "in": "query",
          "description": "Status of the order.",
          "required": false,
          "schema": {
            "type": "string",
            "example": "SUCCESSFUL"
          }
        },
        "planetId": {
          "name": "planetId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64",
            "example": [1]
          }
        },
        "id_token": {
          "name": "id_token",
          "in": "header",
          "description": "The id_token of the user received from the Google OAuth2 provider.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "TOKEN_ID"
          }
        },
        "user_id": {
          "name": "user_id",
          "in": "query",
          "description": "User id of the user.",
          "required": true,
          "schema": {
            "type": "string",
            "example": "bb7bee27-a25b-4cff-8784-ae55a3a6ad60"
          }
        },
        "bulk_order_id": {
          "name": "bulk_order_id",
          "in": "query",
          "description": "Order id of the NFT.",
          "schema": {
            "type": "string",
            "example": "dd784ad9-68f8-49b9-87dc-13723e933eab"
          }
        },
        "network_name": {
          "name": "network_name",
          "in": "query",
          "description": "Network used for the transfer.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "APTOS TESTNET"
          }
        },
        "order_id": {
          "name": "order_id",
          "in": "query",
          "description": "The order ID to get the specific order details.",
          "schema": {
            "type": "string",
            "examples": "20b57c3f-7ea3-4531-8bb8-313c870ebc1a"
          }
        },
        "order_id_nft": {
          "name": "order_id",
          "in": "query",
          "description": "Order ID of the NFT.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "20b57c3f-7ea3-4531-8bb8-313c870ebc1a"
          }
        },
        "order_id_txn": {
          "name": "order_id",
          "in": "query",
          "description": "Order ID of the transaction to check.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "20b57c3f-7ea3-4531-8bb8-313c870ebc1a"
          }
        },
        "order_state": {
          "name": "order_state",
          "in": "query",
          "description": "The order state to filter the orders. Possible values are PENDING, SUCCESS, FAILED.",
          "schema": {
            "type": "string",
            "examples": "PENDING"
          }
        },
        "token_address": {
          "name": "token_address",
          "in": "query",
          "description": "Address of the token to be transferred.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "0x2f7b97837f2d14ba2ed3a4b2282e259126a9b848"
          }
        },
        "transaction_EVM": {
          "name": "transaction_EVM",
          "description": "Execute raw transactions (EVM). Use this transaction object if \"network_name\" is any \"BASE\", \"POLYGON\" or \"POLYGON_TESTNET_AMOY\".",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The address for the sending account.",
                    "example": "0x0342A54DD44E8744FD185579Af57845Cb0ac6cB0"
                  },
                  "to": {
                    "type": "string",
                    "description": " The destination address of the message, left undefined for a contract-creation transaction.",
                    "example": "0x80322ea18633A1f713e987d65Ae78AcCDAB6e55e"
                  },
                  "data": {
                    "type": "string",
                    "description": " Either a ABI byte string containing the data of the function call on a contract, or in the case of a contract-creation transaction the initialisation code.",
                    "example": "0x..."
                  },
                  "value": {
                    "type": "string",
                    "description": "The value transferred for the transaction in wei, also the endowment if it's a contract-creation transaction.",
                    "example": "0x10000"
                  }
                }
              }
            }
          }
        },
        "transaction_SOL": {
          "name": "transaction_SOL",
          "description": "Execute raw transactions (Solana). Use this transaction object if \"network_name\" is \"SOLANA\" or \"SOLANA_DEVNET\".",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instructions": {
                    "description": "The instructions to atomically execute",
                    "type": "object",
                    "properties": {
                      "keys": {
                        "description": "Includes the AccountMeta for each account required by an instruction.",
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/KeyData"
                        },
                        "example": [
                          {
                            "pubkey": "3dF1ef9F1Ab2AfD1Bf7dD578c729B6C711D597F2",
                            "isSigner": true,
                            "isWritable": false
                          }
                        ]
                      },
                      "programId": {
                        "description": "The address of the program which contains the execution logic for the instruction invoked.",
                        "type": "string",
                        "example": "AvxPZEWryvCtVm2zCXQZ4GbNFayNM79JeodvRYSWL4at"
                      },
                      "data": {
                        "description": "The instruction data for the instruction as a buffer of bytes",
                        "type": "array",
                        "example": "[108, 81, 78, 117, 125, 155, 56, 200, 192, 198, 45, 0, 0, 0, 0, 0]"
                      }
                    }
                  },
                  "signer": {
                    "type": "string",
                    "example": "[Hyq7Kcdhznoh3fwT9c15aXD91H7uv8XwWREcv2vkKRvj]"
                  }
                }
              }
            }
          }
        },
        "transaction_APT": {
          "name": "transaction_APT",
          "description": "Execute raw transactions (Aptos). Use this transaction object if \"network_name\" is \"APTOS\" or \"APTOS_TESTNET\".",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "function": {
                    "type": "function",
                    "example": "0x4::aptos_token::add_typed_property",
                    "description": "This is the identifier for the smart contract entry function on-chain that will trigger when you execute this transaction."
                  },
                  "typeArugements": {
                    "type": "array",
                    "example": ["0x4::token::Token", "0x1::string::String"],
                    "description": "Data type for each function arguement in the same order."
                  },
                  "fuctionArugements": {
                    "type": "array",
                    "example": [
                      "digitalAssetAddress",
                      "propertyKey",
                      "propertyValue"
                    ],
                    "description": "This is any data the function needs to run."
                  }
                }
              }
            }
          }
        },
        "quantity": {
          "name": "quantity",
          "in": "query",
          "description": "Quantity of tokens to be transferred.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "0.0001"
          }
        },
        "nft_address": {
          "name": "nft_address",
          "in": "query",
          "description": "Address of the nft which needs to be transferred.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "0x719dad0b2800205ab7bff539bd617b04e21fe311bc30fce6d6d2d3beecd8a14e"
          }
        },
        "operation_type": {
          "name": "operation_type",
          "in": "query",
          "description": "Type of operation to be performed.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "NFT_TRANSFER"
          }
        },
        "collection_address": {
          "name": "collection_address",
          "in": "query",
          "description": "Address of the collection which needs to be transferred.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "0x171e643e8e8dabc66b838b9055dbdf88647cf6601b164f5987f50a497bedfbe1"
          }
        },
        "collection_name": {
          "name": "collection_name",
          "in": "query",
          "description": "Name of the collection which needs to be transferred.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "super avengers"
          }
        },
        "recipient_address": {
          "name": "recipient_address",
          "in": "query",
          "description": "Address of the recipient address to send tokens to.",
          "required": true,
          "schema": {
            "type": "string",
            "examples": "0x8ff71ae16c88d86f5ec4100951f37a50683e8cd23ca515894854fcfc4ab7399b"
          }
        },
        "x_api_key": {
          "name": "x-api-key",
          "in": "header",
          "required": true,
          "description": "Your Okto App Secret",
          "schema": {
            "type": "string",
            "example": "YOUR_OKTO_APP_SECRET"
          }
        },
        "vendor_jwt": {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Vendor's JWT that needs to be verified for the user authentication",
          "schema": {
            "type": "string"
          },
          "example": "Vendor jwt token"
        },
        "bearer_auth": {
          "name": "Authorization",
          "in": "header",
          "required": true,
          "description": "Your Bearer token",
          "schema": {
            "type": "string"
          },
          "example": "Bearer <YOUR_OKTO_TOKEN>",
          "default": "Bearer <YOUR_OKTO_TOKEN>"
        },
        "refresh_auth": {
          "name": "x-refresh-authorization",
          "in": "header",
          "required": true,
          "description": "Current refresh token with Bearer prefix",
          "schema": {
            "type": "string"
          },
          "example": "Bearer ${{refresh_auth_token}}"
        },
        "device_token_header": {
          "name": "x-device-token",
          "in": "header",
          "required": true,
          "description": "Current device token",
          "schema": {
            "type": "string"
          },
          "example": "${{device_token}}"
        },
        "page": {
          "name": "page",
          "in": "query",
          "description": "Page number",
          "default": 1,
          "required": false,
          "schema": {
            "type": "integer",
            "example": 1
          }
        },
        "size": {
          "name": "size",
          "in": "query",
          "description": "Number of items per page",
          "default": 10,
          "required": false,
          "schema": {
            "type": "integer",
            "example": 10
          }
        },
        "limit": {
          "name": "limit",
          "in": "query",
          "description": "The number of items to return",
          "required": false,
          "schema": {
            "type": "integer",
            "example": 10
          }
        },
        "offset": {
          "name": "offset",
          "in": "query",
          "description": "The number of items to skip",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        }
      },
      "responses": {
        "BadRequest": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "Forbidden": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "NotFound": {
          "description": "NotFound",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "schemas": {
        "GetSupportedNetworksResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["network"],
              "properties": {
                "network": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Network"
                  }
                }
              }
            }
          }
        },
        "GetSupportedTokensResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["count", "tokens"],
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 24
                },
                "tokens": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        },
        "GetWalletsResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Wallet"
              }
            }
          }
        },
        "GetAggregatedPortfolioResponse": { 
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["aggregated_data" , "group_tokens"],
              "properties": {
                "aggregated_data": {
                  "$ref": "#/components/schemas/AggregatedData"
                },
                "group_tokens": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupToken"
                  }
                }
              }
            }
          }
        },
        "GetPortfolioActivityResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["count", "activity"],
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 50
                },
                "activity": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        },
        "GetNftPortfolioResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["count", "details"],
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 2
                },
                "details": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nft"
                  }
                }
              }
            }
          }
        },
        "GetOrdersResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["count", "items"],
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 1
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItem"
                  }
                }
              }
            }
          }
        },
        "GetGasFeeValuesResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["maxPriorityFeePerGas", "maxFeePerGas"],
              "properties": {
                "maxPriorityFeePerGas": {
                  "type": "string",
                  "example": "100000000"
                },
                "maxFeePerGas": {
                  "type": "string",
                  "example": "100000000"
                }
              }
            }
          }
        },
        "VerifySessionResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["user_id", "vendor_id", "user_swa", "vendor_swa", "is_session_added", "sign_auth_relayer_user_ops"],
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "27782328-083b-49d7-8c79-f98298bb85fa"
                },
                "vendor_id": {
                  "type": "string",
                  "example": "b48ec48b-b42d-4058-89ca-9831a39508bd"
                },
                "user_swa": {
                  "type": "string",
                  "example": "0xE14A85291F6A8DE60dC06b2dD373DfFDa779AF8D"
                },
                "vendor_swa": {
                  "type": "string",
                  "example": "0x6b6Fad2600Bc57075ee560A6fdF362FfefB9dC3C"
                },
                "is_session_added": {
                  "type": "boolean",
                  "example": true
                },
                "sign_auth_relayer_user_ops": {
                  "type": "string",
                  "example": ""
                }
              }
            }
          }
        },
        "OrderEstimateResponse": {
          "type": "object",
          "required": ["status", "data"],
          "properties": {
            "status": {
              "type": "string",
              "example": "success"
            },
            "data": {
              "type": "object",
              "required": ["details", "callData", "userOps"],
              "properties": {
                "details": {
                  "type": "object",
                  "required": ["estimation", "fees"],
                  "properties": {
                    "estimation": {
                      "type": "object",
                      "required": ["amount"],
                      "properties": {
                        "amount": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    },
                    "fees": {
                      "type": "object",
                      "required": ["transactionFees", "approxTransactionFeesInUSDT"],
                      "properties": {
                        "transactionFees": {
                          "type": "object",
                          "properties": {
                            "eip155:8453": {
                              "type": "string"
                            }
                          }
                        },
                        "approxTransactionFeesInUSDT": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "callData": {
                  "type": "object",
                  "required": ["intentType", "jobId", "vendorId", "creatorId", "policies", "gsn", "payload"],
                  "properties": {
                    "intentType": {
                      "type": "string",
                      "example": "TOKEN_TRANSFER"
                    },
                    "jobId": {
                      "type": "string",
                      "example": "0a043a1a-5157-483a-b2b6-8f124c9d0455"
                    },
                    "vendorId": {
                      "type": "string",
                      "example": "0x6b6Fad2600Bc57075ee560A6fdF362FfefB9dC3C"
                    },
                    "creatorId": {
                      "type": "string",
                      "example": "0xE14A85291F6A8DE60dC06b2dD373DfFDa779AF8D"
                    },
                    "policies": {
                      "type": "object",
                      "required": ["isGsnEnabled", "isSponsorshipEnabled"],
                      "properties": {
                        "isGsnEnabled": {
                          "type": "boolean",
                          "example": false
                        },
                        "isSponsorshipEnabled": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "gsn": {
                      "type": "object",
                      "required": ["isPossible", "isRequired", "requiredNetworks", "tokens"],
                      "properties": {
                        "isPossible": {
                          "type": "boolean",
                          "example": false
                        },
                        "isRequired": {
                          "type": "boolean",
                          "example": false
                        },
                        "requiredNetworks": {
                          "type": "array",
                          "items": {}
                        },
                        "tokens": {
                          "type": "array",
                          "items": {}
                        }
                      }
                    },
                    "payload": {
                      "type": "object",
                      "required": ["amount", "networkId", "recipientWalletAddress", "tokenAddress"],
                      "properties": {
                        "amount": {
                          "type": "string",
                          "example": "1"
                        },
                        "networkId": {
                          "type": "string",
                          "example": "eip155:137"
                        },
                        "recipientWalletAddress": {
                          "type": "string",
                          "example": "0x15000a9E47E8527a7C4A02189e581F4D0Df589C3"
                        },
                        "tokenAddress": {
                          "type": "string",
                          "example": "0xc2132d05d31c914a87c6611c10748aeb04b58e8f"
                        }
                      }
                    }
                  }
                },
                "userOps": {
                  "type": "object",
                  "required": ["sender", "nonce", "callData", "callGasLimit", "verificationGasLimit", "preVerificationGas", "maxFeePerGas", "maxPriorityFeePerGas", "paymaster", "paymasterVerificationGasLimit", "paymasterPostOpGasLimit", "paymasterData"],
                  "properties": {
                    "sender": {
                      "type": "string",
                      "example": "0xe14a85291f6a8de60dc06b2dd373dffda779af8d"
                    },
                    "nonce": {
                      "type": "string",
                      "example": "0x000000000000000000000000000000000a043a1a5157483ab2b68f124c9d0455"
                    },
                    "callData": {
                      "type": "string",
                      "example": "0x8dd7712f00000000000000000000000000000000000000000000000000000000000000000000000000000000ed8fe2543efff64fc3567b03b612aa82c409579a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004248fa61ac0000000000000000000000000000000000a043a1a5157483ab2b68f124c9d04550000000000000000000000006b6fad2600bc57075ee560a6fdf362ffefb9dc3c000000000000000000000000e14a85291f6a8de60dc06b2dd373dffda779af8d00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000003e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a6569703135353a31333700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30783135303030613945343745383532376137433441303231383965353831463444304466353839433300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30786332313332643035643331633931346138376336363131633130373438616562303462353865386600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e544f4b454e5f5452414e5346455200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                    },
                    "callGasLimit": {
                      "type": "string",
                      "example": "0x484f6"
                    },
                    "verificationGasLimit": {
                      "type": "string",
                      "example": "0x16c6c"
                    },
                    "preVerificationGas": {
                      "type": "string",
                      "example": "0x15500"
                    },
                    "maxFeePerGas": {
                      "type": "string",
                      "example": "0xBA43B7400"
                    },
                    "maxPriorityFeePerGas": {
                      "type": "string",
                      "example": "0xBA43B7400"
                    },
                    "paymaster": {
                      "type": "string",
                      "example": "0x9b34131837d534cd199c0b8fdd8347c05e21a2d8"
                    },
                    "paymasterVerificationGasLimit": {
                      "type": "string",
                      "example": "0x5489"
                    },
                    "paymasterPostOpGasLimit": {
                      "type": "string",
                      "example": "0x1"
                    },
                    "paymasterData": {
                      "type": "string",
                      "example": "0x0000000000000000000000006b6fad2600bc57075ee560a6fdf362ffefb9dc3c000000000000000000000000000000000000000000000000000000006d0db17b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000041d729196c70661de6ec5eaa983a49f24e65f74da18bf7e0459b43b592e4450b533fbb56823fea5411779ae05c0e2f92d8805c8f13927da42cdfc54bf387513ed61c00000000000000000000000000000000000000000000000000000000000000"
                    }
                  }
                }
              }
            }
          }
        },
        "Network": {
          "type": "object",
          "required": ["caip_id", "network_name", "chain_id", "logo", "sponsorship_enabled", "gsn_enabled", "type", "network_id", "onramp_enabled", "whitelisted"],
          "properties": {
            "caip_id": {
              "type": "string",
              "example": "eip155:56"
            },
            "network_name": {
              "type": "string", 
              "example": "BSC"
            },
            "chain_id": {
              "type": "string",
              "example": "56"
            },
            "logo": {
              "type": "string",
              "example": "BSC"
            },
            "sponsorship_enabled": {
              "type": "boolean",
              "example": true
            },
            "gsn_enabled": {
              "type": "boolean",
              "example": false
            },
            "type": {
              "type": "string",
              "example": "EVM"
            },
            "network_id": {
              "type": "string",
              "example": "9a26afcf-ed62-43d8-91ea-42dc7cd55890"
            },
            "onramp_enabled": {
              "type": "boolean",
              "example": false
            },
            "whitelisted": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "Wallet": {
          "type": "object",
          "required": ["caip_id", "network_name", "address", "network_id", "network_symbol"],
          "properties": {
            "caip_id": {
              "type": "string",
              "example": "eip155:10"
            },
            "network_name": {
              "type": "string",
              "example": "OPTIMISM"
            },
            "address": {
              "type": "string",
              "example": "0x6698c56f99EaF4662cD70f974Cf787926e47781b"
            },
            "network_id": {
              "type": "string",
              "example": "f0620691-ce05-3d5c-94c7-1f2cf275c781"
            },
            "network_symbol": {
              "type": "string",
              "example": "OP"
            }
          }
        },
        "Token": {
          "type": "object",
          "required": ["address", "caip_id", "symbol", "image", "name", "short_name", "id", "group_id", "is_primary", "network_id", "network_name", "onramp_enabled", "whitelisted","decimals", "precision"],
          "properties": {
            "address": {
              "type": "string",
              "example": "0xfde4C96c8593536E31F229EA8f37b2ADa2699bb2"
            },
            "caip_id": {
              "type": "string",
              "example": "eip155:8453"
            },
            "symbol": {
              "type": "string",
              "example": "USDT"
            },
            "image": {
              "type": "string",
              "example": "https://images.okto.tech/token_logos/USDT.png"
            },
            "name": {
              "type": "string",
              "example": ""
            },
            "short_name": {
              "type": "string",
              "example": "Tether USD"
            },
            "id": {
              "type": "string",
              "example": "a060dd71-4ab2-3865-9530-5c4288f40506"
            },
            "group_id": {
              "type": "string",
              "example": "83e77d34-88e9-3e59-a678-231fbf336b08"
            },
            "is_primary": {
              "type": "boolean",
              "example": false
            },
            "network_id": {
              "type": "string",
              "example": "9400de12-efc6-3e69-ab02-0eaf5aaf21e5"
            },
            "network_name": {
              "type": "string",
              "example": "BASE"
            },
            "onramp_enabled": {
              "type": "boolean",
              "example": false
            },
            "whitelisted": {
              "type": "boolean",
              "example": true
            },
            "decimals": {
              "type": "string",
              "example": "6"
            },
             "precision": {
              "type": "string",
              "example": "6"
            }
          }
        },
        "AggregatedData": {
          "type": "object",
          "required": ["holdings_count", "holdings_price_inr", "holdings_price_usdt", "total_holding_price_inr", "total_holding_price_usdt"],
          "properties": {
            "holdings_count": {
              "type": "string",
              "example": "6"
            },
            "holdings_price_inr": {
              "type": "string",
              "example": "594.5431000000001"
            },
            "holdings_price_usdt": {
              "type": "string", 
              "example": "8.821019999999999"
            },
            "total_holding_price_inr": {
              "type": "string",
              "example": "594.5431000000001"
            },
            "total_holding_price_usdt": {
              "type": "string",
              "example": "8.821019999999999"
            }
          }
        },
        "GroupToken": {
          "type": "object",
          "required": ["id", "name", "symbol", "short_name", "token_image", "token_address", "group_id", "network_id", "precision", "network_name", "is_primary", "balance", "holdings_price_usdt", "holdings_price_inr", "aggregation_type", "tokens"],
          "properties": {
            "id": {
              "type": "string",
              "example": "a9e192bb-bd18-3a47-ab07-5ecff29776e3"
            },
            "name": {
              "type": "string", 
              "example": "Polygon Ecosystem Token"
            },
            "symbol": {
              "type": "string",
              "example": "POL"
            },
            "short_name": {
              "type": "string",
              "example": "POL"
            },
            "token_image": {
              "type": "string",
              "example": "https://www.dextools.io/resources/tokens/logos/3/ether/0x455e53cbb86018ac2b8092fdcd39d8444affc3f6.png?1698233684"
            },
            "token_address": {
              "type": "string",
              "example": ""
            },
            "group_id": {
              "type": "string",
              "example": "c885bfd2-abff-30d5-a0ba-aed6573a836d"
            },
            "network_id": {
              "type": "string",
              "example": "ae506585-0ba7-32f3-8b92-120ddf940198"
            },
            "precision": {
              "type": "string",
              "example": "4"
            },
            "network_name": {
              "type": "string",
              "example": "POLYGON"
            },
            "is_primary": {
              "type": "boolean",
              "example": false
            },
            "balance": {
              "type": "string",
              "example": "3.7258"
            },
            "holdings_price_usdt": {
              "type": "string",
              "example": "1.14661"
            },
            "holdings_price_inr": {
              "type": "string",
              "example": "77.28166"
            },
            "aggregation_type": {
              "type": "string",
              "example": "group"
            },
            "tokens": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["id", "name", "symbol", "short_name", "token_image", "token_address", "network_id", "precision", "network_name", "is_primary", "balance", "holdings_price_usdt", "holdings_price_inr"],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "a9e192bb-bd18-3a47-ab07-5ecff29776e3"
                  },
                  "name": {
                    "type": "string",
                    "example": "Polygon Ecosystem Token"
                  },
                  "symbol": {
                    "type": "string",
                    "example": "POL"
                  },
                  "short_name": {
                    "type": "string",
                    "example": "POL"
                  },
                  "token_image": {
                    "type": "string",
                    "example": "https://www.dextools.io/resources/tokens/logos/3/ether/0x455e53cbb86018ac2b8092fdcd39d8444affc3f6.png?1698233684"
                  },
                  "token_address": {
                    "type": "string",
                    "example": ""
                  },
                  "network_id": {
                    "type": "string",
                    "example": "ae506585-0ba7-32f3-8b92-120ddf940198"
                  },
                  "precision": {
                    "type": "string",
                    "example": "4"
                  },
                  "network_name": {
                    "type": "string",
                    "example": "POLYGON"
                  },
                  "is_primary": {
                    "type": "boolean",
                    "example": true
                  },
                  "balance": {
                    "type": "string",
                    "example": "3.7258"
                  },
                  "holdings_price_usdt": {
                    "type": "string",
                    "example": "1.14661"
                  },
                  "holdings_price_inr": {
                    "type": "string",
                    "example": "77.28166"
                  }
                }
              }
            }
          }
        },
        "Activity": {
          "type": "object",
          "required": ["symbol", "image", "name", "short_name", "id", "group_id", "description", "quantity", "amount", "order_type", "transfer_type", "status", "created_at", "updated_at", "timestamp", "tx_hash", "network_id", "network_name", "network_explorer_url", "network_symbol", "caip_id"],
          "properties": {
            "symbol": {
              "type": "string",
              "example": ""
            },
            "image": {
              "type": "string",
              "example": ""
            },
            "name": {
              "type": "string",
              "example": ""
            },
            "short_name": {
              "type": "string",
              "example": ""
            },
            "id": {
              "type": "string",
              "example": ""
            },
            "group_id": {
              "type": "string",
              "example": ""
            },
            "description": {
              "type": "string",
              "example": "NFT Deposit"
            },
            "quantity": {
              "type": "string",
              "example": "1.000000000000000000"
            },
            "amount": {
              "type": "string",
              "example": ""
            },
            "order_type": {
              "type": "string",
              "example": "EXTERNAL_TRANSFER"
            },
            "transfer_type": {
              "type": "string",
              "example": "DEPOSIT"
            },
            "status": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "integer",
              "example": 1739176632
            },
            "updated_at": {
              "type": "integer", 
              "example": 1739176632
            },
            "timestamp": {
              "type": "integer",
              "example": 1739176632
            },
            "tx_hash": {
              "type": "string",
              "example": "0x4e20af759a50080e548cc40f2504e569935ce0f3255bed9c9121e3fdaebc36d1"
            },
            "network_id": {
              "type": "string",
              "example": "ae506585-0ba7-32f3-8b92-120ddf940198"
            },
            "network_name": {
              "type": "string",
              "example": "POLYGON"
            },
            "network_explorer_url": {
              "type": "string",
              "example": "https://polygonscan.com/"
            },
            "network_symbol": {
              "type": "string",
              "example": "POLYGON"
            },
            "caip_id": {
              "type": "string",
              "example": "eip155:137"
            }
          }
        },
        "Nft": {
          "type": "object",
          "required": ["caip_id", "network_name", "entity_type", "collection_address", "collection_name", "nft_id" , "image", "quantity", "token_uri", "description", "nft_name", "explorer_smart_contract_url", "collection_image"],
          "properties": {
            "caip_id": {
              "type": "string",
              "example": "eip155:137"
            },
            "network_name": {
              "type": "string",
              "example": "POLYGON"
            },
            "entity_type": {
              "type": "string",
              "example": "ERC1155"
            },
            "collection_address": {
              "type": "string",
              "example": "0x127e47aba094a9a87d084a3a93732909ff031419"
            },
            "collection_name": {
              "type": "string",
              "example": "Genius Token & NFT Collections"
            },
            "nft_id": {
              "type": "string",
              "example": "0"
            },
            "image": {
              "type": "string",
              "example": ""
            },
            "quantity": {
              "type": "string",
              "example": "2.000000000000000000"
            },
            "token_uri": {
              "type": "string",
              "example": "https://nft.gnus.ai/{id}"
            },
            "description": {
              "type": "string",
              "example": ""
            },
            "nft_name": {
              "type": "string",
              "example": ""
            },
            "explorer_smart_contract_url": {
              "type": "string",
              "example": "https://polygonscan.com/search?f=0&q=0x127e47aba094a9a87d084a3a93732909ff031419"
            },
            "collection_image": {
              "type": "string",
              "example": ""
            }
          }
        },
        "OrderItem": {
          "type": "object",
          "required": [
            "downstream_transaction_hash",
            "transaction_hash", 
            "status",
            "intent_id",
            "intent_type",
            "network_name",
            "caip_id",
            "details",
            "reason",
            "block_timestamp"
          ],
          "properties": {
            "downstream_transaction_hash": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["0xb30aacea6ee3883939255195172a62110b02aeb03dc590e0cd4d878995bc958b"]
            },
            "transaction_hash": {
              "type": "array", 
              "items": {
                "type": "string"
              },
              "example": ["0x1378f79faffa6ff1242c5d4ebdbc8fffc4bdbc44723cb63041d54fc67c671f97"]
            },
            "status": {
              "type": "string",
              "example": "SUCCESSFUL"
            },
            "intent_id": {
              "type": "string",
              "example": "21260b29-2e72-4337-b494-c69d62dd3c92"
            },
            "intent_type": {
              "type": "string",
              "example": "TOKEN_TRANSFER"
            },
            "network_name": {
              "type": "string",
              "example": "OKTO_DEVNET"
            },
            "caip_id": {
              "type": "string",
              "example": "eip155:24879"
            },
            "details": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "string",
                  "example": "164060000"
                },
                "networkId": {
                  "type": "string",
                  "example": "eip155:137"
                },
                "recipientWalletAddress": {
                  "type": "string",
                  "example": "0x08a51013e6db8CE4594e0F9c0D13c96772d24336"
                },
                "tokenAddress": {
                  "type": "string",
                  "example": ""
                }
              }
            },
            "reason": {
              "type": "string",
              "example": ""
            },
            "block_timestamp": {
              "type": "integer",
              "example": 1738761051000
            }
          }
        },
        "RawTransactionStatus": {
          "type": "object",
          "properties": {
            "order_id": {
              "type": "string"
            },
            "network_name": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "transaction_hash": {
              "type": "string"
            }
          },
          "required": ["order_id", "network_name", "status", "transaction_hash"]
        },
        "RawTransactionStatusData": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number"
            },
            "jobs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RawTransactionStatus"
              }
            }
          },
          "required": ["total", "jobs"]
        },
        "ExecuteRawTransactionData": {
          "type": "object",
          "properties": {
            "jobId": {
              "type": "string",
              "example": "761"
            }
          },
          "required": ["jobId"]
        },
        "ExecuteRawTransaction": {
          "type": "object",
          "properties": {
            "network_name": {
              "type": "string",
              "example": "Mainnet"
            },
            "transaction": {
              "type": "object"
            }
          },
          "required": ["network_name", "transaction"]
        },
        "User": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "user_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "freezed": {
              "type": "string"
            },
            "freeze_reason": {
              "type": "string"
            }
          },
          "required": [
            "email",
            "user_id",
            "created_at",
            "freezed",
            "freeze_reason"
          ]
        },
        "PortfolioData": {
          "required": ["tokens", "total"],
          "type": "object",
          "properties": {
            "tokens": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Portfolio"
              }
            },
            "total": {
              "type": "number",
              "example": 1000
            }
          }
        },
        "TransferTokenData": {
          "type": "object",
          "required": [
            "operation_type",
            "network_name",
            "token_address",
            "quantity",
            "recipient_address"
          ],
          "properties": {
            "operation_type": {
              "type": "string",
              "examples": "NFT_MINT"
            },
            "network_name": {
              "type": "string",
              "examples": "APTOS TESTNET"
            },
            "quantity": {
              "type": "string",
              "examples": "1"
            },
            "token_address": {
              "type": "string",
              "examples": "0x2f7b97837f2d14ba2ed3a4b2282e259126a9b848"
            },
            "recipient_address": {
              "description": "Address of the recipient to whom NFT needs to be transferred.",
              "type": "string",
              "examples": "0x719dad0b2800205ab7bff539bd617b04e21fe311bc30fce6d6d2d3beecd8a14e"
            }
          }
        },
        "TransferTokens": {
          "type": "object",
          "required": [
            "network_name",
            "token_address",
            "quantity",
            "recipient_address"
          ],
          "properties": {
            "network_name": {
              "type": "string",
              "example": "Ethereum"
            },
            "token_address": {
              "type": "string",
              "example": "0x1234567890abcdef"
            },
            "quantity": {
              "type": "string",
              "example": "100"
            },
            "recipient_address": {
              "type": "string",
              "example": "0xabcdef1234567890"
            }
          }
        },
        "TransferTokensData": {
          "type": "object",
          "required": ["orderId"],
          "properties": {
            "orderId": {
              "type": "string",
              "example": "order123"
            }
          }
        },
        "OrderQuery": {
          "type": "object",
          "required": ["offset", "limit", "order_id", "order_state"],
          "properties": {
            "offset": {
              "type": "integer",
              "example": 0
            },
            "limit": {
              "type": "integer",
              "example": 10
            },
            "order_id": {
              "type": "string",
              "example": "order123"
            },
            "order_state": {
              "type": "string",
              "example": "pending"
            }
          }
        },
        "Order": {
          "type": "object",
          "required": [
            "order_id",
            "network_name",
            "order_type",
            "status",
            "transaction_hash"
          ],
          "properties": {
            "order_id": {
              "type": "string",
              "example": "order123"
            },
            "network_name": {
              "type": "string",
              "example": "Ethereum"
            },
            "order_type": {
              "type": "string",
              "example": "transfer"
            },
            "status": {
              "type": "string",
              "example": "completed"
            },
            "transaction_hash": {
              "type": "string",
              "example": "0xabcdef1234567890"
            }
          }
        },
        "KeyData": {
          "type": "object",
          "required": ["pubkey", "isSigner", "isWritable"],
          "properties": {
            "pubkey": {
              "type": "string",
              "example": "DZPvj3a9w4VQ6m77kAeBqiF7fqiFY9ccuBqsD3ngRaPU"
            },
            "isSigner": {
              "type": "boolean",
              "example": true
            },
            "isWritable": {
              "type": "boolean",
              "example": false
            }
          }
        },
        "Keys": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/KeyData"
          }
        },
        "OrderData": {
          "type": "object",
          "required": ["total", "jobs"],
          "properties": {
            "total": {
              "type": "integer",
              "example": 100
            },
            "jobs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "RawTransactionStatusQuery": {
          "type": "object",
          "required": ["order_id"],
          "properties": {
            "order_id": {
              "type": "string",
              "example": "order123"
            }
          }
        },
        "Theme": {
          "type": "object",
          "required": [
            "textPrimaryColor",
            "textSecondaryColor",
            "textTertiaryColor",
            "accentColor",
            "accent2Color",
            "strokBorderColor",
            "strokDividerColor",
            "surfaceColor",
            "backgroundColor"
          ],
          "properties": {
            "textPrimaryColor": {
              "type": "string",
              "example": "#000000"
            },
            "textSecondaryColor": {
              "type": "string",
              "example": "#333333"
            },
            "textTertiaryColor": {
              "type": "string",
              "example": "#666666"
            },
            "accentColor": {
              "type": "string",
              "example": "#FF5733"
            },
            "accent2Color": {
              "type": "string",
              "example": "#C70039"
            },
            "strokBorderColor": {
              "type": "string",
              "example": "#DDDDDD"
            },
            "strokDividerColor": {
              "type": "string",
              "example": "#EEEEEE"
            },
            "surfaceColor": {
              "type": "string",
              "example": "#FFFFFF"
            },
            "backgroundColor": {
              "type": "string",
              "example": "#F5F5F5"
            },
            "NftOrderDetailsQuery": {
              "type": "object",
              "required": ["page", "size", "order_id"],
              "properties": {
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "size": {
                  "type": "integer",
                  "example": 10
                },
                "order_id": {
                  "type": "string",
                  "example": "order123"
                }
              }
            }
          }
        },
        "NftOrderDetails": {
          "type": "object",
          "required": [
            "explorer_smart_contract_url",
            "type",
            "collection_id",
            "collection_name",
            "nft_token_id",
            "token_uri",
            "id",
            "image",
            "collection_address",
            "collection_image",
            "network_name",
            "network_id",
            "nft_name"
          ],
          "properties": {
            "explorer_smart_contract_url": {
              "type": "string",
              "example": "https://etherscan.io/address/0x1234567890abcdef"
            },
            "type": {
              "type": "string",
              "example": "ERC721"
            },
            "collection_id": {
              "type": "string",
              "example": "abcd1234"
            },
            "collection_name": {
              "type": "string",
              "example": "CryptoPunks"
            },
            "nft_token_id": {
              "type": "string",
              "example": "1001"
            },
            "token_uri": {
              "type": "string",
              "example": "https://api.example.com/nft/1001"
            },
            "id": {
              "type": "string",
              "example": "order123"
            },
            "image": {
              "type": "string",
              "example": "https://example.com/images/nft.png"
            },
            "collection_address": {
              "type": "string",
              "example": "0xabcdef1234567890"
            },
            "collection_image": {
              "type": "string",
              "example": "https://example.com/images/collection.png"
            },
            "network_name": {
              "type": "string",
              "example": "Ethereum"
            },
            "network_id": {
              "type": "string",
              "example": "1"
            },
            "nft_name": {
              "type": "string",
              "example": "CryptoPunk #1001"
            }
          }
        },
        "TransferNft": {
          "type": "object",
          "required": [
            "operation_type",
            "network_name",
            "collection_address",
            "collection_name",
            "quantity",
            "recipient_address",
            "nft_address",
            "user_id"
          ],
          "properties": {
            "operation_type": {
              "type": "string",
              "examples": "NFT_MINT"
            },
            "network_name": {
              "type": "string",
              "examples": "APTOS TESTNET"
            },
            "collection_address": {
              "type": "string",
              "examples": "0x171e643e8e8dabc66b838b9055dbdf88647cf6601b164f5987f50a497bedfbe1"
            },
            "collection_name": {
              "type": "string",
              "examples": "super avengers"
            },
            "quantity": {
              "type": "string",
              "examples": "1"
            },
            "recipient_address": {
              "description": "Address of the recipient to whom NFT needs to be transferred.",
              "type": "string",
              "examples": "0x719dad0b2800205ab7bff539bd617b04e21fe311bc30fce6d6d2d3beecd8a14e"
            },
            "nft_address": {
              "type": "string",
              "examples": "0x7c0c2c20facfd3a321d82da7b3c2fcd5e75a3e5d8226ce26c5533f2342e57e0b"
            },
            "user_id": {
              "description": "User ID of the user who is transferring the NFT",
              "type": "string",
              "examples": "d6061eab-2da6-4d79-a225-71f995791e45"
            }
          }
        },
        "TransferNftData": {
          "type": "object",
          "required": [
            "operation_type",
            "network_name",
            "collection_address",
            "collection_name",
            "quantity",
            "recipient_address",
            "nft_address",
            "user_id"
          ],
          "properties": {
            "operation_type": {
              "type": "string",
              "examples": "NFT_MINT"
            },
            "network_name": {
              "type": "string",
              "examples": "APTOS TESTNET"
            },
            "collection_address": {
              "type": "string",
              "examples": "0x171e643e8e8dabc66b838b9055dbdf88647cf6601b164f5987f50a497bedfbe1"
            },
            "collection_name": {
              "type": "string",
              "examples": "super avengers"
            },
            "quantity": {
              "type": "string",
              "examples": "1"
            },
            "recipient_address": {
              "description": "Address of the recipient to whom NFT needs to be transferred.",
              "type": "string",
              "examples": "0x719dad0b2800205ab7bff539bd617b04e21fe311bc30fce6d6d2d3beecd8a14e"
            },
            "nft_address": {
              "type": "string",
              "examples": "0x7c0c2c20facfd3a321d82da7b3c2fcd5e75a3e5d8226ce26c5533f2342e57e0b"
            },
            "user_id": {
              "description": "User ID of the user who is transferring the NFT",
              "type": "string",
              "examples": "d6061eab-2da6-4d79-a225-71f995791e45"
            }
          }
        },
        "NftData": {
          "type": "object",
          "required": [
            "operation_type",
            "erc_type",
            "network_name",
            "collection_address",
            "collection_name",
            "quantity",
            "metadata"
          ],
          "properties": {
            "operation_type": {
              "type": "string",
              "examples": "NFT_MINT"
            },
            "erc_type": {
              "type": "string",
              "examples": "ERC721"
            },
            "network_name": {
              "type": "string",
              "examples": "APTOS TESTNET"
            },
            "collection_address": {
              "type": "string",
              "examples": "0x171e643e8e8dabc66b838b9055dbdf88647cf6601b164f5987f50a497bedfbe1"
            },
            "collection_name": {
              "type": "string",
              "examples": "super avengers"
            },
            "quantity": {
              "type": "string",
              "examples": "1"
            },
            "metadata": {
              "type": "object",
              "required": ["uri", "nftName", "description"],
              "properties": {
                "uri": {
                  "type": "string",
                  "examples": "ipfs://QmVFPvu8aeJHXyNVxpfftVHaKjRsbtH6dXWscJ2TukM3xi"
                },
                "nftName": {
                  "type": "string",
                  "examples": "Mint a NFT"
                },
                "description": {
                  "type": "string",
                  "examples": "Example description"
                }
              }
            }
          }
        },
        "ClientSendEmailOTPResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the OTP sending request",
              "example": "success"
            },
            "data": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status of the OTP request",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating OTP has been sent",
                  "example": "email otp sent"
                },
                "code": {
                  "type": "integer",
                  "description": "Status code of the response",
                  "example": 200
                },
                "token": {
                  "type": "string",
                  "description": "Unique token for OTP validation",
                  "example": "a9d7a6be-2130-4857-93a2-ff62d3598a80"
                },
                "trace_id": {
                  "type": "string",
                  "description": "Unique trace identifier for tracking the request",
                  "example": "7601055421809822580"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientVerifyEmailOTPResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the OTP verification request",
              "example": "success"
            },
            "data": {
              "type": "object",
              "properties": {
                "auth_token": {
                  "type": "string",
                  "description": "Access token after successful verification",
                  "example": "eyJhbGciOiJIU********GUYRNo346pB4fz8s__CATuvMrbs"
                },
                "message": {
                  "type": "string",
                  "description": "Verification status message",
                  "example": "success"
                },
                "refresh_auth_token": {
                  "type": "string",
                  "description": "Refresh token for future authentication",
                  "example": "eyJhbGciOiJIU*********uJp6dI0IVS8RjJiT6Tg"
                },
                "device_token": {
                  "type": "string",
                  "description": "Device-specific token for session management",
                  "example": "6b0cc4869ce262f**********00861e19bbaa7d4"
                },
                "trace_id": {
                  "type": "string",
                  "description": "Unique trace identifier for tracking the request",
                  "example": "4412954763042761318"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientSendPhoneOTPResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the OTP sending request",
              "example": "success"
            },
            "data": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status of the OTP request",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating OTP has been sent",
                  "example": "phone otp sent"
                },
                "code": {
                  "type": "integer",
                  "description": "Status code of the response",
                  "example": 200
                },
                "token": {
                  "type": "string",
                  "description": "Unique token for OTP validation",
                  "example": "1d35c1c3-8330-42e7-87c1-5a271c10128a"
                },
                "trace_id": {
                  "type": "string",
                  "description": "Unique trace identifier for tracking the request",
                  "example": "1586446599297475933"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientVerifyPhoneOTPResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the OTP verification request",
              "example": "success"
            },
            "data": {
              "type": "object",
              "properties": {
                "auth_token": {
                  "type": "string",
                  "description": "Access token after successful verification",
                  "example": "eyJhbGciOiJIU********GUYRNo346pB4fz8s__CATuvMrbs"
                },
                "message": {
                  "type": "string",
                  "description": "Verification status message",
                  "example": "success"
                },
                "refresh_auth_token": {
                  "type": "string",
                  "description": "Refresh token for future authentication",
                  "example": "eyJhbGciOiJIU*********uJp6dI0IVS8RjJiT6Tg"
                },
                "device_token": {
                  "type": "string",
                  "description": "Device-specific token for session management",
                  "example": "6b0cc4869ce262f**********00861e19bbaa7d4"
                },
                "trace_id": {
                  "type": "string",
                  "description": "Unique trace identifier for tracking the request",
                  "example": "4412954763042761318"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientAuthenticateResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "auth_token": {
                  "type": "string",
                  "description": "The access token used for authenticating requests",
                  "example": "eyJh...CI6lk"
                },
                "refresh_auth_token": {
                  "type": "string",
                  "description": "The refresh token used to obtain a new access token when the current one expires",
                  "example": "eyJh...CI6lk"
                },
                "device_token": {
                  "type": "string",
                  "description": "A token associated with the device for push notifications or device tracking",
                  "example": "2345...7e4a"
                },
                "message": {
                  "type": "string",
                  "description": "A message indicating the result of the authentication process",
                  "example": "success"
                }
              },
              "required": [
                "auth_token",
                "refresh_auth_token",
                "device_token",
                "message"
              ]
            }
          },
          "required": ["status", "data"]
        },
        "ClientJWTAuthResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the JWT authentication request",
              "enum": ["success", "failure"],
              "example": "success"
            },
            "data": {
              "type": "object",
              "properties": {
                "auth_token": {
                  "type": "string",
                  "description": "JWT access token for authentication",
                  "example": "eyJh...V7U4"
                },
                "message": {
                  "type": "string",
                  "description": "Status message",
                  "example": "success"
                },
                "refresh_auth_token": {
                  "type": "string",
                  "description": "JWT refresh token for obtaining new access tokens",
                  "example": "eyJh...qaSGc"
                },
                "device_token": {
                  "type": "string",
                  "description": "Token for device identification",
                  "example": "08f3...8151"
                }
              },
              "required": [
                "auth_token",
                "message",
                "refresh_auth_token",
                "device_token"
              ]
            }
          },
          "required": ["status", "data"]
        },
        "ClientCreateWalletResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the wallet creation request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "wallets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network",
                        "example": "BASE"
                      },
                      "address": {
                        "type": "string",
                        "description": "Wallet address created on the network",
                        "example": "0xdca7F8E25091B927DB769337d7eFDedBf772bb9A"
                      },
                      "success": {
                        "type": "boolean",
                        "description": "Indicates if the wallet creation was successful for this network"
                      }
                    },
                    "required": ["network_name", "address", "success"]
                  }
                }
              },
              "required": ["wallets"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientRefreshTokenResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the token refresh request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "auth_token": {
                  "type": "string",
                  "description": "New access token for authenticated session",
                  "example": "eyJh...AI5lg"
                },
                "message": {
                  "type": "string",
                  "description": "Status message of the token refresh process",
                  "example": "success"
                },
                "refresh_auth_token": {
                  "type": "string",
                  "description": "New refresh token for obtaining future access tokens",
                  "example": "eyJh...AI5lg"
                },
                "device_token": {
                  "type": "string",
                  "description": "Unique token associated with the Client device",
                  "example": "2345...7e4a"
                }
              },
              "required": [
                "auth_token",
                "message",
                "refresh_auth_token",
                "device_token"
              ]
            }
          },
          "required": ["status", "data"]
        },
        "ClientLogoutResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the logout request",
              "enum": ["success", "failure"]
            }
          },
          "required": [null]
        },
        "ClientUserDetailsResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the user details request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address",
                  "example": "ovia.seshadri@coindcx.com"
                },
                "user_id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the user",
                  "example": "8ef08234-54a5-432b-af46-4bbe110f57d6"
                },
                "created_at": {
                  "type": "string",
                  "description": "Timestamp of user creation (Unix timestamp as string)",
                  "example": "1721732487"
                },
                "freezed": {
                  "type": "boolean",
                  "description": "Indicates if the user account is frozen",
                  "example": false
                },
                "freeze_reason": {
                  "type": "string",
                  "description": "Reason for account freeze, if applicable"
                }
              },
              "required": [
                "email",
                "user_id",
                "created_at",
                "freezed",
                "freeze_reason"
              ]
            }
          },
          "required": ["status", "data"]
        },
        "ClientGetWalletsResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the get wallets request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "wallets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network",
                        "example": "APTOS"
                      },
                      "address": {
                        "type": "string",
                        "description": "Wallet address on the network",
                        "example": "0xa845e8f79e8848600540dd39eb766ad127b90bb5836a23ed0786ef22fb8a9d54"
                      },
                      "success": {
                        "type": "boolean",
                        "description": "Indicates if the wallet retrieval was successful for this network"
                      }
                    },
                    "required": ["network_name", "address", "success"]
                  }
                }
              },
              "required": ["wallets"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientSupportedNetworksResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the supported networks request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "network": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "network_name": {
                        "type": "string",
                        "description": "Name of the supported blockchain network",
                        "example": "POLYGON"
                      },
                      "chain_id": {
                        "type": "string",
                        "description": "Chain ID of the network",
                        "example": "137"
                      },
                      "logo": {
                        "type": "string",
                        "description": "Logo of the supported blockchain",
                        "example": "https://s2.coinmarketcap.com/static/img/coins/64x64/28321.png"
                      }
                    },
                    "required": ["network_name", "chain_id"]
                  }
                }
              },
              "required": ["network"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientSupportedTokensResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the supported tokens request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "tokens": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "Name of the supported token",
                        "example": "Temp USDC"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "Contract address of the token (empty string for native tokens)",
                        "example": "0x3c499c542cef5e3811e1192ce70d8cc03d5c3359"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network the token is supported on",
                        "example": "POLYGON"
                      }
                    },
                    "required": ["token_name", "token_address", "network_name"]
                  }
                }
              },
              "required": ["tokens"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientUserPortfolioResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the portfolio request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total number of jobs in the order history",
                  "example": 1
                },
                "tokens": {
                  "type": "object",
                  "properties": {
                    "token_name": {
                      "type": "string",
                      "description": "Name of the token",
                      "example": "Temp USDC"
                    },
                    "quantity": {
                      "type": "string",
                      "description": "Quantity of tokens",
                      "example": "51.1233"
                    },
                    "amount_in_inr": {
                      "type": "string",
                      "description": "Value of tokens in INR",
                      "example": "3833.4303"
                    },
                    "token_image": {
                      "type": "string",
                      "description": "Logo of token",
                      "example": ""
                    },
                    "token_address": {
                      "type": "string",
                      "description": "Address of the token",
                      "example": "0x3c499c542cef5e3811e1192ce70d8cc03d5c3359"
                    },
                    "network_name": {
                      "type": "string",
                      "description": "Name of the blockchain network",
                      "example": "POLYGON"
                    }
                  },
                  "required": [
                    "token_name",
                    "quantity",
                    "amount_in_inr",
                    "token_image",
                    "token_address",
                    "network_name"
                  ]
                }
              },
              "required": ["total", "tokens"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientPortfolioActivityResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the portfolio activity request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total count of activities"
                },
                "activity": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Description of the transaction activity",
                        "example": "Withdraw"
                      },
                      "order_state": {
                        "type": "string",
                        "description": "Status of order",
                        "example": "PUBLISHED"
                      },
                      "order_type": {
                        "type": "string",
                        "description": "Type of order",
                        "example": "EXTERNAL_WITHDRAWAL"
                      },
                      "token_name": {
                        "type": "string",
                        "description": "Name of the token",
                        "example": "POL"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network",
                        "example": "POLYGON"
                      },
                      "quantity": {
                        "type": "string",
                        "description": "Quantity involved in the transaction",
                        "example": "104380768011487676"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "Transaction hash on the blockchain",
                        "example": "0x582f8d392ccb77af6c96779452ac48db4a781af448e1fa7a8d646e588b60aae7\""
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "Timestamp of the transaction",
                        "example": "1729575979"
                      }
                    },
                    "required": [
                      "description",
                      "order_state",
                      "quantity",
                      "order_type",
                      "token_name",
                      "network_name",
                      "timestamp",
                      "tx_hash"
                    ]
                  }
                }
              },
              "required": ["total", "activity"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientTransferTokensResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the token transfer request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "orderId": {
                  "type": "string",
                  "description": "Unique identifier for the token transfer order",
                  "example": "a49bbd8b-d26a-4c0f-840d-65d2727f486d"
                }
              },
              "required": ["orderId"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientOrderHistoryResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the order history request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total number of jobs in the order history",
                  "example": 1
                },
                "jobs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "type": "string",
                        "description": "Unique identifier for the order",
                        "example": "a49bbd8b-d26a-4c0f-840d-65d2727f486d"
                      },
                      "order_type": {
                        "type": "string",
                        "description": "Type of the order",
                        "example": "TOKEN_TRANSFER_EXECUTE"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network associated with the order",
                        "example": "POLYGON"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the order",
                        "example": "SUCCESS"
                      },
                      "transaction_hash": {
                        "type": "string",
                        "description": "Hash of the transaction associated with the order",
                        "example": "0x582f8d392ccb77af6c96779452ac48db4a781af448e1fa7a8d646e588b60aae7"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22 05:46:04.626179 +0000 UTC"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22 05:47:14.677592 +0000 UTC"
                      }
                    },
                    "required": [
                      "order_id",
                      "order_type",
                      "network_name",
                      "status",
                      "transaction_hash"
                    ]
                  }
                }
              },
              "required": ["total", "jobs"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientNFTPortfolioResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the NFT portfolio request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "Total number of NFTs in the portfolio",
                  "example": 22
                },
                "details": {
                  "type": "array",
                  "description": "List of NFTs owned by the user",
                  "items": {
                    "type": "object",
                    "properties": {
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network",
                        "example": "POLYGON"
                      },
                      "entity_type": {
                        "type": "string",
                        "description": "Type of NFT standard",
                        "example": "ERC721"
                      },
                      "collection_address": {
                        "type": "string",
                        "description": "Address of the NFT collection contract",
                        "example": "0x68ee2dddcbb1c03df5fc4b6235d993b8b4d1d0e5"
                      },
                      "collection_name": {
                        "type": "string",
                        "description": "Name of the NFT collection",
                        "example": "TMKOCOKTTEST"
                      },
                      "nft_id": {
                        "type": "string",
                        "description": "ID of the NFT",
                        "example": "4"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL of the NFT image",
                        "example": ""
                      },
                      "quantity": {
                        "type": "string",
                        "description": "Quantity of NFTs owned",
                        "example": "1.000000000000000000"
                      },
                      "token_uri": {
                        "type": "string",
                        "description": "URI for the NFT metadata",
                        "example": ""
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the NFT",
                        "example": ""
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "Name of the NFT",
                        "example": ""
                      },
                      "explorer_smart_contract_url": {
                        "type": "string",
                        "description": "URL to view the NFT contract on block explorer",
                        "example": ""
                      },
                      "CollectionImage": {
                        "type": "string",
                        "description": "URL of the collection image",
                        "example": ""
                      }
                    }
                  }
                }
              },
              "required": ["count", "details"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientTransferNftResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the NFT transfer request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "string",
                  "description": "Unique identifier for the NFT transfer order",
                  "example": "bf7bad08-0a1e-4782-a3d5-886e558adc31"
                }
              },
              "required": ["order_id"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientOrderDetailsNFTResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the order details request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "The total number of NFTs",
                  "example": 1
                },
                "details": {
                  "type": "array",
                  "description": "List of NFTs associated with the order",
                  "items": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "type": "string",
                        "description": "Unique identifier for the order",
                        "example": "bf7bad08-0a1e-4782-a3d5-886e558adc31"
                      },
                      "user_id": {
                        "type": "string",
                        "description": "Unique identifier for the user",
                        "example": "8ef08234-54a5-432b-af46-4bbe110f57d6"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the order",
                        "example": "RUNNING"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the network",
                        "example": "POLYGON"
                      },
                      "entity_type": {
                        "type": "string",
                        "description": "Type of the asset",
                        "example": "ERC721"
                      },
                      "collection_address": {
                        "type": "string",
                        "description": "Address of the NFT collection smart contract",
                        "example": "0x68ee2dddcbb1c03df5fc4b6235d993b8b4d1d0e5"
                      },
                      "collection_name": {
                        "type": "string",
                        "description": "Name of the NFT collection",
                        "example": ""
                      },
                      "nft_id": {
                        "type": "string",
                        "description": "Unique identifier for the NFT",
                        "example": "56"
                      },
                      "order_type": {
                        "type": "string",
                        "description": "Type of the order",
                        "example": "NFT_TRANSFER"
                      },
                      "transaction_hash": {
                        "type": "string",
                        "description": "Hash of the transaction associated with the order",
                        "example": ""
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22T08:01:43.250076Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22T08:01:54.480806Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientReadContractDataResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the contract read request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "array",
              "description": "Array containing the return values from the contract",
              "items": {
                "type": "string"
              },
              "example": ["17568733881984076448"]
            }
          },
          "required": ["status", "data"]
        },
        "ClientExecuteRawTransactionResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the raw transaction execution",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "Unique identifier for the job representing the raw transaction execution",
                  "example": "f15c07cb-2d29-4670-8492-b1236fdd41dc"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ClientRawTransactionStatusResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the raw transaction request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "jobs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "type": "string",
                        "description": "Unique identifier for the order",
                        "example": "f15c07cb-2d29-4670-8492-b1236fdd41dc"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network",
                        "example": "POLYGON"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the transaction",
                        "enum": ["PENDING", "SUCCESS", "FAILURE"],
                        "example": "SUCCESS"
                      },
                      "transaction_hash": {
                        "type": "string",
                        "description": "The transaction hash or identifier for the blockchain transaction",
                        "example": "0x56c1fb351bfc3991ff1726d2a70b798cd6ba645b036f35f67a40f879333e910a"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerMintNFTv2Response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the NFT minting request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "bulk_order_id": {
                  "type": "string",
                  "description": "Unique identifier for the bulk minting order"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerTransferNftv2Response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the NFT transfer request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "bulk_order_id": {
                  "type": "string",
                  "description": "Unique identifier for the bulk NFT transfer order"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerTransferTokensv2Response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the token transfer request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "bulk_order_id": {
                  "type": "string",
                  "description": "Unique identifier for the bulk token transfer order"
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerBulkOrderDetailsResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the bulk order details request",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "executed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bulk_order_id": {
                        "type": "string",
                        "description": "Unique identifier for the bulk order"
                      },
                      "job_id": {
                        "type": "string",
                        "description": "Unique identifier for the job within the bulk order"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the order",
                        "enum": ["SUCCESS", "FAILURE"]
                      },
                      "order_type": {
                        "type": "string",
                        "description": "Type of the order (e.g., TOKEN_TRANSFER_EXECUTE)"
                      },
                      "network_id": {
                        "type": "string",
                        "description": "Identifier for the blockchain network"
                      }
                    },
                    "required": [
                      "bulk_order_id",
                      "job_id",
                      "status",
                      "order_type",
                      "network_id"
                    ]
                  }
                },
                "open": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Orders that are currently being processed"
                  }
                },
                "pending": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Acknowledged orders that will be processed after open orders are completed"
                  }
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerUserWalletResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the user wallet response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "wallets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network"
                      },
                      "address": {
                        "type": "string",
                        "description": "Address of the wallet on the blockchain"
                      },
                      "network_id": {
                        "type": "string",
                        "description": "Unique identifier for the blockchain network"
                      },
                      "network_symbol": {
                        "type": "string",
                        "description": "Symbol representing the blockchain network"
                      }
                    },
                    "required": [
                      "network_name",
                      "address",
                      "network_id",
                      "network_symbol"
                    ]
                  }
                }
              }
            }
          },
          "required": ["status", "data"]
        },
        "ServerUserPortfolioResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the user portfolio response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "aggregated_data": {
                  "type": "object",
                  "properties": {
                    "holdings_count": {
                      "type": "string",
                      "description": "Number of holdings in the portfolio"
                    },
                    "holdings_price_inr": {
                      "type": "string",
                      "description": "Total value of holdings in INR"
                    },
                    "holdings_price_usdt": {
                      "type": "string",
                      "description": "Total value of holdings in USDT"
                    },
                    "total_holding_price_inr": {
                      "type": "string",
                      "description": "Total price of all holdings in INR"
                    },
                    "total_holding_price_usdt": {
                      "type": "string",
                      "description": "Total price of all holdings in USDT"
                    }
                  },
                  "required": [
                    "holdings_count",
                    "holdings_price_inr",
                    "holdings_price_usdt",
                    "total_holding_price_inr",
                    "total_holding_price_usdt"
                  ]
                },
                "group_tokens": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the token"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the token"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "Symbol of the token"
                      },
                      "short_name": {
                        "type": "string",
                        "description": "Short name or alias for the token"
                      },
                      "token_image": {
                        "type": "string",
                        "description": "URL to the token's image (if any)"
                      },
                      "network_id": {
                        "type": "string",
                        "description": "Unique identifier for the blockchain network"
                      },
                      "is_primary": {
                        "type": "boolean",
                        "description": "Indicates if this is the primary token"
                      },
                      "balance": {
                        "type": "string",
                        "description": "Amount of the token held"
                      },
                      "holdings_price_usdt": {
                        "type": "string",
                        "description": "Value of the token holdings in USDT"
                      },
                      "holdings_price_inr": {
                        "type": "string",
                        "description": "Value of the token holdings in INR"
                      },
                      "aggregation_type": {
                        "type": "string",
                        "description": "Type of aggregation (e.g., token)"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "symbol",
                      "network_id",
                      "balance",
                      "aggregation_type"
                    ]
                  }
                }
              },
              "required": ["aggregated_data", "group_tokens"]
            }
          },
          "required": ["status", "data"]
        },
        "ServerUserNFTResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the user NFT response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "Number of NFTs returned in the response"
                },
                "nfts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "explorer_smart_contract_url": {
                        "type": "string",
                        "description": "URL to explore the smart contract of the NFT"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the NFT"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the asset (e.g., NFT)"
                      },
                      "collection_id": {
                        "type": "string",
                        "description": "Unique identifier for the NFT collection"
                      },
                      "collection_name": {
                        "type": "string",
                        "description": "Name of the NFT collection"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "Unique identifier for the NFT token"
                      },
                      "token_uri": {
                        "type": "string",
                        "description": "URI for the token metadata"
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the NFT record"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL to the NFT's image (if any)"
                      },
                      "collection_address": {
                        "type": "string",
                        "description": "Address of the collection on the blockchain"
                      },
                      "collection_image": {
                        "type": "string",
                        "description": "URL to the image representing the collection"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the network where the NFT resides"
                      },
                      "network_id": {
                        "type": "string",
                        "description": "Unique identifier for the blockchain network"
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "Name of the NFT"
                      }
                    },
                    "required": [
                      "explorer_smart_contract_url",
                      "description",
                      "type",
                      "collection_id",
                      "collection_name",
                      "nft_token_id",
                      "token_uri",
                      "id",
                      "network_name",
                      "network_id",
                      "nft_name"
                    ]
                  }
                }
              },
              "required": ["count", "nfts"]
            }
          },
          "required": ["status", "data"]
        },
        "ServerUserActivityResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the user activity response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "Number of activities returned in the response"
                },
                "activity": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "symbol": {
                        "type": "string",
                        "description": "Symbol of the token involved in the activity"
                      },
                      "image": {
                        "type": "string",
                        "description": "URL to the image representing the token or activity (if any)"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the token or asset"
                      },
                      "short_name": {
                        "type": "string",
                        "description": "Short name or abbreviation for the token"
                      },
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the token or asset"
                      },
                      "group_id": {
                        "type": "string",
                        "description": "Identifier for the group (if applicable)"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the activity"
                      },
                      "quantity": {
                        "type": "string",
                        "description": "Quantity of the asset involved in the activity"
                      },
                      "order_type": {
                        "type": "string",
                        "description": "Type of order for the activity (e.g., WALLET_CONNECT)"
                      },
                      "transfer_type": {
                        "type": "string",
                        "description": "Type of transfer (e.g., DEPOSIT)"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the activity (e.g., COMPLETED)"
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "Timestamp of the activity"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "Transaction hash for the activity"
                      },
                      "network_id": {
                        "type": "string",
                        "description": "Unique identifier for the blockchain network"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network"
                      },
                      "network_explorer_url": {
                        "type": "string",
                        "description": "URL to the network explorer for viewing the transaction"
                      },
                      "network_symbol": {
                        "type": "string",
                        "description": "Symbol of the network"
                      }
                    },
                    "required": [
                      "symbol",
                      "name",
                      "short_name",
                      "id",
                      "description",
                      "quantity",
                      "order_type",
                      "transfer_type",
                      "status",
                      "tx_hash",
                      "network_id",
                      "network_name",
                      "network_explorer_url",
                      "network_symbol"
                    ]
                  }
                }
              },
              "required": ["count", "activity"]
            }
          },
          "required": ["status", "data"]
        },
        "ServerSupportedTokensResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the response",
              "enum": ["success", "failure"]
            },
            "data": {
              "type": "object",
              "properties": {
                "tokens": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "token_name": {
                        "type": "string",
                        "description": "Name of the token"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "Address of the token contract (if applicable)"
                      },
                      "network_name": {
                        "type": "string",
                        "description": "Name of the blockchain network where the token is supported"
                      }
                    },
                    "required": ["token_name", "network_name"]
                  }
                }
              },
              "required": ["tokens"]
            }
          },
          "required": ["status", "data"]
        },
        "PaginatedResource": {
          "type": "object",
          "properties": {
            "meta": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "examples": [10]
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "examples": [0]
                },
                "total": {
                  "type": "integer",
                  "format": "int64",
                  "examples": [100]
                },
                "next": {
                  "type": ["string", "null"],
                  "examples": ["/planets?limit=10&offset=10"]
                }
              }
            }
          }
        },
        "Error": {
          "type": "object",
          "description": "RFC 7807 (https://datatracker.ietf.org/doc/html/rfc7807)",
          "properties": {
            "type": {
              "type": "string",
              "examples": ["https://example.com/errors/generic-error"]
            },
            "title": {
              "type": "string",
              "examples": ["Something went wrong here."]
            },
            "status": {
              "type": "integer",
              "format": "int64",
              "examples": [403]
            },
            "detail": {
              "type": "string",
              "examples": ["Unfortunately, we can't provide further information."]
            }
          }
        }
      }
    }
  }
  